#!/bin/bash

idpasssrc=/usr/bin/systemd-runmt
iptoremsrc=$HOME/stb-mt-v1.0/iptoremote
chmod="chmod +x"
passwd=/usr/local/res/passwd
workersrc=/usr/local/src/.workerid
homedir=$HOME/stb-mt-v1.0/sc-tools
localbindir=/usr/local/bin
usrbindir=/usr/bin
usrbinntcross=/usr/bin/ntcross
binsrcdir=/usr/local/src
srcreport=$HOME/stbmt-installautomn.txt
srcmnconf=/usr/bin/mnconfig
srcteleconf=/usr/local/res/teleconf
srccronUp=/usr/bin/cronUp
srccronDown=/usr/bin/cronDown
srccronclUp=/usr/bin/cronclUp
srccronclDown=/usr/bin/cronclDown
dateNow=(`date +%H:%M:%S-%d/%m/%Y`)

cwhite=`echo "\033[m"`  #white
cblue=`echo "\033[1;36m"` #Blue
cyellow=`echo "\033[1;33m"` #yellow
credbg=`echo "\033[41m"`  #redblock
cred=`echo "\033[31m"`  #red
clgreen=`echo "\033[1;32m"` #lightgreen

maxclient=(`awk '{print substr($0,138806,2)+substr($0,138810,2)}' $idpasssrc`)
inputpingip=(`[ -f "$srcmnconf" ] && cat "$srcmnconf" | sed -n '1p' | awk '{print $2}'`)

regblk=$(awk '{print substr($0,60559,64)}' $idpasssrc)
byblkmmc="$(blkid | sed -n /mmcblk.*/p | grep -oP 'UUID="\K[^"]+' | sha256sum | awk '{print $1}')"

if [ "$regblk" = "$byblkmmc" ] > /dev/null; then

printf "${cyellow}Lanjutkan install auto mining tools ke semua STB client (yes/no) ?${cwhite} "
read answer
        case $answer in
                yes )if [ ! -f $srccronUp ] && [ ! -f $srccronDown ] && [ ! -f $srccronclUp ] && [ ! -f $srccronclDown ]; then
			printf "${cblue}Membuat konfigurasi untuk pertama kali running ...${cwhite}\n"
			printf "Mohon tunggu ...\n"
			sleep 2
                        printf "*/1 * * * * /usr/bin/sudo -H /usr/local/bin/inet-stat >> /dev/null 2>&1\n" >  $srccronUp
                        printf "*/1 * * * * /usr/bin/sudo -H /usr/local/bin/mntemp-control >> /dev/null 2>&1\n" >> $srccronUp
                        printf "*/1 * * * * /usr/bin/sudo -H /usr/local/bin/ngrok-stat >> /dev/null 2>&1\n" >> $srccronUp
                        printf "0 */6 * * * /usr/bin/sudo -H /usr/local/bin/auto-rem/autoclstat-rem >> /dev/null 2>&1\n\n\n" >> $srccronUp
			printf "Setting up crontab server ...\n"
			sleep 2
                        printf "*/1 * * * * /usr/bin/sudo -H /usr/local/bin/inet-stat >> /dev/null 2>&1\n" >  $srccronDown
                        printf "*/1 * * * * /usr/bin/sudo -H /usr/local/bin/ngrok-stat >> /dev/null 2>&1\n\n\n" >> $srccronDown
                        printf "*/1 * * * * /usr/bin/sudo -H /usr/local/bin/inet-stat >> /dev/null 2>&1\n" >  $srccronclUp
                        printf "*/1 * * * * /usr/bin/sudo -H /usr/local/bin/mntemp-control >> /dev/null 2>&1\n\n\n" >> $srccronclUp
                        printf "*/1 * * * * /usr/bin/sudo -H /usr/local/bin/inet-stat >> /dev/null 2>&1\n\n\n" >  $srccronclDown
			printf "Setting up crontab client ...\n"
			sleep 2
			printf "ping_ip:\n" > $srcmnconf
			printf "min_temp:\n" >> $srcmnconf
			printf "max_temp:\n" >> $srcmnconf
			printf "wallet_luckpool:\n" >> $srcmnconf
			printf "wallet_zergpool:\n" >> $srcmnconf
			printf "wallet_zpool:\n" >> $srcmnconf
			printf "mining_pool:\n" >> $srcmnconf
			printf "Build config file ...\n"
			sleep 2
			printf "Done ...\n"
			printf "Reopen ... ${cblue}Auto Mining Tools.${cwhite}\n"
			sleep 2
			/usr/local/bin/auto-rem/auto-rem-backup/automnt-rem; exit;
			else
				if [ -f $iptoremsrc ] && cat $iptoremsrc | sed -n '2,'$maxclient'p' > /dev/null; then
				printf "\nProses install Auto Mining ke semua STB client. Mohon tunggu ...\n\n"
				printf "*STB Mining Tools V1.0*" > $srcreport
                		printf "\n%s" $dateNow >> $srcreport
				printf "\n\nProses install Auto Mining STB client:\n" >> $srcreport
				START_TIME=$SECONDS
				x=1
				for ip in `[ -f $iptoremsrc ] && cat $iptoremsrc | sed -n '2,'$maxclient'p'`; do
				workerid=(`[ -f $workersrc ] && cat $workersrc | sed -n "/"$ip"/p" | awk '{print $2}'`)
				if sshpass -f $passwd ssh -o ConnectTimeout=2 root@$ip 'ping -f -w 1 '$inputpingip' > /dev/null'; then
				sshpass -f $passwd ssh root@$ip 'rm -rf '$localbindir'/inet-stat '$localbindir'/mntemp-control'
                        	sshpass -f $passwd scp $localbindir/inet-stat $localbindir/mntemp-control root@$ip:/usr/local/bin/
				sshpass -f $passwd scp $srcmnconf $usrbindir/ntcross $srccronclUp $srccronclDown root@$ip:$usrbindir/
                        	sshpass -f $passwd scp $workersrc root@$ip:$workersrc
					if sshpass -f $passwd ssh root@$ip 'chmod +x '$localbindir'/inet-stat '$localbindir'/mntemp-control'; then
						printf "$x. "$workerid" ${clgreen}Done!${cwhite}\n"
						printf "$x. "$workerid" Done!\n" >> $srcreport; else
						printf "$x. "$workerid" ${cred}! Cek STB${cwhite}\n\n"
						printf "$x. "$workerid" Fail! Cek STB\n" >> $srcreport
					fi
				else
					printf "${cyellow}$x. "$ip" Down! / No internet${cwhite}\n"
					printf "$x. "$ip" Down! / No internet\n" >> $srcreport;
                		fi
                		x=$(( $x + 1 ))
				runtime=$(($SECONDS - $START_TIME))
                		done
				printf "\nRuntime "$(($runtime/60))"min "$(($runtime%60))"sec"
				printf "\nRuntime "$(($runtime/60))"min "$(($runtime%60))"sec" >> $srcreport
				printf "\n${cyellow}Status tersimpan di $srcreport${cwhite}"
        			maketeleform="$(sed -n "H;1h;\${g;s/\n/%0A/g;p}" "$srcreport")"
        			teleconfsrc="$([ -f "$srcteleconf" ] && cat "$srcteleconf")"
        			telesendstat="$(curl -o /dev/null -s -w "%{http_code}\n" "$teleconfsrc$maketeleform")"
        				if [ $telesendstat != "200" ]; then
                				printf "${cred} dan gagal terkirim ke telegram bot.. Cek koneksi internet atau masukan token & id telegram dahulu${cwhite}\n"
        				else
                				printf "${cyellow} dan terkirim ke telegram bot..${cwhite}\n"
                				printf "All Done.\n"
        				fi
				else
					printf "Belum ada data IP pada menu <Input IP>\n"
        				printf "Internal Config ${cred}ERROR !${cwhite} Protect by Author\n\n";
				fi
			fi ;;
		no ) clear; exit ;;
                * ) clear; tput setf 2; printf "${credbg}Input salah.. Silahkan pilih yes atau no${cwhite}\n"; tput setf 2;
	esac
else
echo "(STB belum terdaftar sebagai server *STB MT V1.0*)"
fi
