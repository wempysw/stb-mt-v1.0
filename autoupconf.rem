#!/bin/bash

idpasssrc=/usr/bin/systemd-runmt
iptoremsrc=$HOME/stb-mt-v1.0/iptoremote
passwd=/usr/local/res/passwd
srcmnconf=/usr/bin/mnconfig
workersrc=/usr/local/src/.workerid
srcreport=$HOME/stbmt-updateconfig.txt
srcteleconf=/usr/local/res/teleconf
dateNow=(`date +%H:%M:%S-%d/%m/%Y`)

cwhite=`echo "\033[m"`  #white
cblue=`echo "\033[1;36m"` #Blue
cyellow=`echo "\033[1;33m"` #yellow
credbg=`echo "\033[41m"`  #redblock
cred=`echo "\033[31m"`  #red
clgreen=`echo "\033[1;32m"` #lightgreen

currping_ip=`[ -f $srcmnconf ] && cat $srcmnconf | sed -n '/ping_ip/p' | awk '{print $2}'`
currminTemp=`[ -f $srcmnconf ] && cat $srcmnconf | sed -n '/min_temp/p' | awk '{print $2}'`
currmaxTemp=`[ -f $srcmnconf ] && cat $srcmnconf | sed -n '/max_temp/p' | awk '{print $2}'`
currluckpool=`[ -f $srcmnconf ] && cat $srcmnconf | sed -n '/wallet_luckpool/p' | awk '{print $2}'`
currzergpool=`[ -f $srcmnconf ] && cat $srcmnconf | sed -n '/wallet_zergpool/p' | awk '{print $2}'`
currzergpoolid=`[ -f $srcmnconf ] && cat $srcmnconf | sed -n '/wallet_zergpool/p' | awk '{print $3}'`
currzpool=`[ -f $srcmnconf ] && cat $srcmnconf | sed -n '/wallet_zpool/p' | awk '{print $2}'`
currMNpool=`[ -f $srcmnconf ] && cat $srcmnconf | sed -n '/mining_pool/p' | awk '{print $2}'`

findip=(`hostname -I`)
workerserver=(`[ -f $workersrc ] && cat $workersrc | sed -n "/"$findip"/p" | awk '{print $2}'`)
maxclient=(`awk '{print substr($0,138806,2)+substr($0,138810,2)}' $idpasssrc`)
findip=(`hostname -I`)
ccminerkill="if pgrep ccminer > /dev/null; then pgrep ccminer | xargs kill > /dev/null; fi"
inputipping=(`[ -f "$srcmnconf" ] && cat "$srcmnconf" | sed -n '1p' | awk '{print $2}'`)
miningpool=(`[ -f $srcmnconf ] && cat $srcmnconf | sed -n '/mining_pool:/p' | awk '{print $2}'`)

regblk=$(awk '{print substr($0,60559,64)}' $idpasssrc)
byblkmmc="$(blkid | sed -n /mmcblk.*/p | grep -oP 'UUID="\K[^"]+' | sha256sum | awk '{print $1}')"

if [ "$regblk" = "$byblkmmc" ] > /dev/null; then
	if [ -f $iptoremsrc ] && cat $iptoremsrc | sed -n '1,'$maxclient'p' > /dev/null; then
	if pgrep ccminer > /dev/null; then pgrep ccminer | xargs kill > /dev/null; fi
		printf "\n${cyellow}Input config telah di update.${cwhite}\n"
		printf "*STB Mining Tools V1.0*" > $srcreport
		printf "\n%s" $dateNow >> $srcreport
		printf "\n\nConfig telah di update:\n" >> $srcreport
		printf "Ping IP: "$currping_ip" Min: "$currminTemp" Max: "$currmaxTemp"\n" >> $srcreport
		printf "VRSC:"$currluckpool"\n" >> $srcreport
		printf ""$currzergpoolid":"$currzergpool"\n" >> $srcreport
                if [ "$miningpool" = 1 ];
                        then
                        printf "\n<Luckpool>" >> $srcreport
                        else
                                if [ "$miningpool" = 2 ];
                                        then
                                        printf "\n<Zergpool>" >> $srcreport
                                        else
                                                if [ "$miningpool" = 3 ];
                                                        then
                                                        printf "\n<Zpool>" >> $srcreport
                                                fi
                                fi
                fi
		printf "\n\nProses sinkron update config:\n" >> $srcreport
		printf "Proses sinkronisasi ke semua STB. Mohon tunggu ...\n\n"
		workerserver=(`[ -f $workersrc ] && cat $workersrc | sed -n "/"$findip"/p" | awk '{print $2}'`)
		printf "1. "$workerserver" Server ${clgreen}Update done!${cwhite}\n"
		printf "1. "$workerserver" Server Update done!\n" >> $srcreport
		START_TIME=$SECONDS
		x=2
		for ip in `[ -f $iptoremsrc ] && cat $iptoremsrc | sed -n '2,'$maxclient'p'`; do
		workerid=(`[ -f $workersrc ] && cat $workersrc | sed -n "/"$ip"/p" | awk '{print $2}'`)
		if sshpass -f $passwd ssh -o ConnectTimeout=2 root@$ip 'ping -f -w 1 '$inputipping'' > /dev/null; then
			sshpass -f $passwd ssh root@$ip "${ccminerkill}"
			if sshpass -f $passwd scp $srcmnconf root@$ip:$srcmnconf; then
				printf "$x. "$workerid" ${clgreen}Update done!${cwhite}\n";
				printf "$x. "$workerid" Update done!\n" >> $srcreport; else
				printf "$x. "$workerid" ${cred}Update fail! Cek STB${cwhite}\n"
				printf "$x. "$workerid" Update Fail! Cek STB\n" >> $srcreport
			fi
		else
                        printf "${cyellow}$x. "$ip" Down! / No internet${cwhite}\n"
                        printf "$x. "$ip" Down! / No internet\n" >> $srcreport;
		fi
		x=$(( $x + 1 ))
		runtime=$(($SECONDS - $START_TIME))
		done
                printf "\nRuntime "$(($runtime/60))"min "$(($runtime%60))"sec"
                printf "\nRuntime "$(($runtime/60))"min "$(($runtime%60))"sec" >> $srcreport
                printf "\n${cyellow}Status tersimpan di $srcreport${cwhite}"
		maketeleform="$(sed -n "H;1h;\${g;s/\n/%0A/g;p}" "$srcreport")"
        	teleconfsrc="$([ -f "$srcteleconf" ] && cat "$srcteleconf")"
        	telesendstat="$(curl -o /dev/null -s -w "%{http_code}\n" "$teleconfsrc$maketeleform")"
        	if [ $telesendstat != "200" ]; then
                	printf "${cred} gagal terkirim ke telegram bot.. Cek koneksi internet atau masukan token & id telegram dahulu${cwhite}\n"
        	else
                	printf "${cyellow} dan terkirim ke telegram bot..${cwhite}\n"
                	printf "All Done.\n"
        	fi
		sleep 1
	else
	printf "Internal Config ${cred}ERROR !${cwhite} Protect by Author\n\n";
	fi
else
echo "(STB belum terdaftar sebagai server *STB MT V1.0*)"
fi
