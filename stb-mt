#!/bin/bash

trap "" 2 SIGTSTP

srciptorem=$HOME/stb-mt-v1.0/iptoremote
idpasssrc=/usr/bin/systemd-runmt
srcpasswd=/usr/local/res/passwd
srccross=/usr/bin/ntcross
srcmnconf=/usr/bin/mnconfig
srcreport=$HOME/status-report.txt
mnlog=/usr/local/src/.mnlog
teconfsrc=/usr/local/res/teleconf
usrlocalresdir=/usr/local/res
srcureg=/usr/local/res/ureg

inputconfig=/usr/local/bin/auto-rem/autoupconf.rem
installccminer=/usr/local/bin/auto-rem/autoexcc-rem
installtools=/usr/local/bin/auto-rem/autoextool-rem
installautomining=/usr/local/bin/auto-rem/automnt-rem
autogenworker=/usr/local/bin/autogen-worker
installcopyid=/usr/local/bin/auto-rem/autorsa-rem
startstopmining=/usr/local/bin/auto-rem/autost-rem
cekclientstat=/usr/local/bin/auto-rem/autoclstat-rem

cwhite=`echo "\033[m"`  #white
cblue=`echo "\033[1;36m"` #Blue
cyellow=`echo "\033[1;33m"` #yellow
credbg=`echo "\033[41m"`  #redblock
cred=`echo "\033[31m"`  #red
clgreen=`echo "\033[1;32m"` #lightgreen

inputip=(`cat "$srcmnconf" | sed -n '1p' | awk '{print $2}'`)
miningpool=(`[ -f $srcmnconf ] && cat $srcmnconf | sed -n '/mining_pool:/p' | awk '{print $2}'`)
coinzergid=(`[ -f $srcmnconf ] && cat $srcmnconf | sed -n '/wallet_zergpool:/p' | awk '{print $3}'`)
dateNow="$(date +%H:%M:%S-%d/%m/%Y)"

byuser="$([ -f "$srcureg" ] && cat "$srcureg" | sha256sum | awk '{print $1}')"
byblkmmc="$(blkid | sed -n /mmcblk.*/p | grep -oP 'UUID="\K[^"]+' | sha256sum | awk '{print $1}')"
bymac="$(ifconfig -a | grep -ioE '([a-z0-9]{2}:){5}..' | sha256sum | awk '{print $1}')"
maxclient=(`awk '{print substr($0,138806,2)+substr($0,138810,2)}' $idpasssrc`)

currping_ip=`[ -f $srcmnconf ] && cat $srcmnconf | sed -n '/ping_ip/p' | awk '{print $2}'`
currminTemp=`[ -f $srcmnconf ] && cat $srcmnconf | sed -n '/min_temp/p' | awk '{print $2}'`
currmaxTemp=`[ -f $srcmnconf ] && cat $srcmnconf | sed -n '/max_temp/p' | awk '{print $2}'`
currluckpool=`[ -f $srcmnconf ] && cat $srcmnconf | sed -n '/wallet_luckpool/p' | awk '{print $2}'`
currzergpool=`[ -f $srcmnconf ] && cat $srcmnconf | sed -n '/wallet_zergpool/p' | awk '{print $2}'`
currzergpoolid=`[ -f $srcmnconf ] && cat $srcmnconf | sed -n '/wallet_zergpool/p' | awk '{print $3}'`
currzpool=`[ -f $srcmnconf ] && cat $srcmnconf | sed -n '/wallet_zpool/p' | awk '{print $2}'`
currMNpool=`[ -f $srcmnconf ] && cat $srcmnconf | sed -n '/mining_pool/p' | awk '{print $2}'`
showhash=(`[ -f $mnlog ] && cat $mnlog | awk -F' ' 'END{print substr($7,0)}'`)
ngrokkill=(`if pgrep ngrok > /dev/null; then pgrep ngrok | xargs kill > /dev/null; fi`)

reguser=$(awk '{print substr($0,29273,64)}' $idpasssrc)
regblk=$(awk '{print substr($0,60559,64)}' $idpasssrc)
regmac=$(awk '{print substr($0,121243,64)}' $idpasssrc)

if [ "$reguser" = "$byuser" ] && [ "$regblk" = "$byblkmmc" ] && [ "$regmac" = "$bymac" ];
        then
clear
        function input_config
        {
        option=0
        until [ "$option" = "9" ]; do
                printf "\n${cblue}**${cyellow} Author by: Wempy Surya ${cwhite}\n"
                printf "${cblue}**${cred} STB Mining Tools V1.0${cwhite}\n"
                echo ""
                printf "${cblue}** ${credbg}Registered "${maxclient}"${cwhite}\n"
                printf "${cblue}**********************************************${cwhite}\n"
                printf "${cblue}**${cwhite}     Input config ${cwhite}\n"
                printf "${cblue}**********************************************${cwhite}\n"
                printf "${cblue}**${cwhite} 1)${cblue} Ping IP edit ? ${cwhite}\n"
                printf "${cblue}**${cwhite}    ${clgreen}"$currping_ip"${cwhite} "$saved" "$ping_ip"\n"
                printf "${cblue}**${cwhite} 2)${cblue} Min Temp edit ? ${cwhite}\n"
                printf "${cblue}**${cwhite}    ${clgreen}"$currminTemp"${cwhite} "$saved" "$minTemp"\n"
                printf "${cblue}**${cwhite} 3)${cblue} Max Temp edit ? ${cwhite}\n"
                printf "${cblue}**${cwhite}    ${clgreen}"$currmaxTemp"${cwhite} "$saved" "$maxTemp"\n"
                printf "${cblue}**${cwhite} 4)${cblue} Wallet 1. Luckpool edit ? ${cwhite}\n"
                printf "${cblue}**${cwhite}    ${clgreen}"$currluckpool"${cwhite}\n"
                printf "${cblue}**${cwhite}    "$saved" "$luckpool"\n"
                printf "${cblue}**${cwhite} 5)${cblue} Wallet 2. Zergpool edit ? ${cwhite}\n"
                printf "${cblue}**${cwhite}    ${clgreen}"$currzergpool" "$currzergpoolid"${cwhite}\n"
                printf "${cblue}**${cwhite}    "$saved" "$zergpool" "$coinid"\n"
                printf "${cblue}**${cwhite} 6)${cblue} Wallet 3. Zpool edit ? ${cwhite}\n"
                printf "${cblue}**${cwhite}    ${clgreen}"$currzpool"${cwhite}\n"
                printf "${cblue}**${cwhite}    "$saved" "$zpool"\n"
                printf "${cblue}**${cwhite} 7)${cblue} Mining Pool edit ? ${cwhite}\n"
                printf "${cblue}**${cwhite}    ${clgreen}"$currMNpool"${cwhite} "$saved" "$mnPool"\n"
		printf "${cblue}**${cwhite} ${cyellow}b${cwhite})${cyellow} Back ${cwhite}\n"
                printf "${cblue}**${cwhite} ${cred}x${cwhite})${cred} Exit ${cwhite}\n"
                printf "${cblue}**********************************************${cwhite}\n"
                echo ""
                printf "${cblue}**${cwhite} Pilih menu (1-7 b/x) lalu ${cyellow}ENTER${cwhite} : "
                read option
                echo ""
                case $option in
                        1 ) clear;
				printf "${cblue}Input Ping IP Baru :${cwhite}\n"
				read ping_ip
				if [ -z "$ping_ip" ]; then
                                        printf "${clgreen}"$currping_ip" Tidak ada perubahan${cwhite}\n"
                                        else
                                        sed -i 's/ping_ip.*/ping_ip:		'$ping_ip'/g' $srcmnconf
                                        printf "${clgreen}"$ping_ip" Tersimpan..${cwhite}\n"
					saved=">"
					$ngrokkill
                                fi ;;
                        2 ) clear;
				printf "${cblue}Input Min Temp Baru :${cwhite}\n"
                                read minTemp
                                if [ -z "$minTemp" ]; then
                                        printf "${clgreen}"$currminTemp" Tidak ada perubahan${cwhite}\n"
                                        else
                                        sed -i 's/min_temp.*/min_temp:		'$minTemp'/g' $srcmnconf
                                        printf "${clgreen}"$minTemp" Tersimpan..${cwhite}\n"
                                        saved=">"
                                fi ;;
                        3 ) clear;
                                printf "${cblue}Input Max Temp Baru :${cwhite}\n"
                                read maxTemp
                                if [ -z "$maxTemp" ]; then
                                        printf "${clgreen}"$currmaxTemp" Tidak ada perubahan${cwhite}\n"
                                        else
                                        sed -i 's/max_temp.*/max_temp:		'$maxTemp'/g' $srcmnconf
                                        printf "${clgreen}"$maxTemp" Tersimpan..${cwhite}\n"
                                        saved=">"
                                fi ;;
                        4 ) clear;
                                printf "${cblue}Input Wallet Verus Luckpool Baru :${cwhite}\n"
                                read luckpool
                                if [ -z "$luckpool" ]; then
                                        printf "${clgreen}"$currluckpool" Tidak ada perubahan${cwhite}\n"
                                        else
                                        sed -i 's/wallet_luckpool.*/wallet_luckpool:	'$luckpool'/g' $srcmnconf
                                        printf "${clgreen}"$luckpool" Tersimpan..${cwhite}\n"
                                        saved=">"
                                fi ;;
                        5 ) clear;
                                printf "${cblue}Input Wallet Zergpool Baru :${cwhite}\n"
                                read zergpool
                                printf "${cblue}Input ID Coin Wallet Zergpool Baru :${cwhite}\n"
                                read coinid
				if [ -z "$zergpool" ] && [ -z "$coinid" ]; then
					printf "${clgreen}"$currzergpool" Tidak ada perubahan${cwhite}\n"
				else
                                        sed -i 's/wallet_zergpool.*/wallet_zergpool:	'$zergpool'	'$coinid'/g' $srcmnconf
                                        printf "${clgreen}"$zergpool" "$coinid" Tersimpan..${cwhite}\n"
                                        saved=">"
                                fi ;;
                        6 ) clear;
                                printf "${cblue}Input Wallet Zpool Baru :${cwhite}\n"
                                read zpool
                                if [ -z "$zpool" ]; then
                                        printf "${clgreen}"$currzpool" Tidak ada perubahan${cwhite}\n"
                                        else
                                        sed -i 's/wallet_zpool.*/wallet_zpool:	'$zpool'/g' $srcmnconf
                                        printf "${clgreen}"$zpool" Tersimpan..${cwhite}\n"
                                        saved=">"
                                fi ;;
                        7 ) clear;
                                printf "${cblue}Input Mining Pool Baru :${cwhite}\n"
                                read mnPool
                                if [ -z "$mnPool" ]; then
                                        printf "${clgreen}"$currMNpool" Tidak ada perubahan${cwhite}\n"
                                        else
                                        sed -i 's/mining_pool.*/mining_pool:		'$mnPool'/g' $srcmnconf
                                        printf "${clgreen}"$mnPool" Tersimpan..${cwhite}\n"
                                        saved=">"
                                fi ;;
                        b ) clear; 
				if [ -z "$ping_ip" ] && [ -z "$minTemp" ] && [ -z "$maxTemp" ] && [ -z "$luckpool" ] && [ -z "$zergpool" ] && [ -z "$coinid" ] && [ -z "$zpool" ] && [ -z "$mnPool" ]; then
				echo "Tidak ada perubahan";
				main_menu;
				else
				[ -f $inputconfig ] && $inputconfig
                                $HOME/stb-mt-v1.0/stb-mt;
				exit ;
				fi ;;
                        x ) clear; printf "${cred}Exiting STB Mining Tools V1.0...${cwhite}\n"; sleep 1; exit ;;
                        * ) clear; tput setf 9; printf "${credbg}Input salah.. Silahkan pilih 1, 2, 3, 4, 5, 6, 7, b atau x${cwhite}"; tput setf 9;
		esac
        done
        }

clear
        function help_menu
        {
        option=0
        until [ "$option" = "2" ]; do
                printf "\n${cblue}**${cyellow} Author by: Wempy Surya ${cwhite}\n"
                printf "${cblue}**${cred} STB Mining Tools V1.0${cwhite}\n"
                echo ""
                printf "${cblue}** ${credbg}Registered "${maxclient}"${cwhite}\n"
                printf "${cblue}**********************************************${cwhite}\n"
                printf "${cblue}**${cwhite} Langkah install untuk pertama kali running  ${cwhite}\n"
                printf "${cblue}**********************************************${cwhite}\n\n"
printf "1)  Langkah 1 pada ${clgreen}Main Menu${cwhite} masuk ke menu ${cyellow}Server tools${cwhite} pilih menu ${cblue}Input IP${cwhite} lalu masukan semua IP client sesuai jumlah registrasi${cwhite}.\n"
printf "    Format pengisian menurun kebawah untuk setiap IP, tanpa ada baris kosong dan spasi.\n"
printf "    ${cred}IP server${cwhite} wajib diletakan pada posisi paling teratas ! Contoh:\n"
printf "    192.168.11.11	${cred}<< IP server letakkan paling atas${cwhite}\n"
printf "    192.168.11.12\n"
printf "    192.168.11.13\n"
printf "    dan seterusnya..\n\n"
printf "    Untuk save ctrl+x, y, enter. (lalu masukan jumlah STB untuk setiap RIG).\n\n"
printf "2)  Langkah 2 pilih menu ${cblue}SSH copy ID${cwhite}.\n"
printf "3)  Langkah 3 pilih menu ${cblue}Install host ngrok${cwhite} untuk akses STB dari IP public.\n"
printf "4)  Langkah 4 pilih menu ${cblue}Input token & ID telegram${cwhite} untuk melihat status di telegram.\n"
printf "5)  Langkah 5 back ke ${clgreen}Main Menu${cwhite} lalu pilih menu ${cyellow}Cek mining status${cwhite}.\n"
printf "6)  Langkah 6 masuk ke menu ${cyellow}Client tools${cwhite} lalu pilih ${cblue}Install ccminer${cwhite}.\n"
printf "7)  Langkah 7 pilih menu ${cblue}Install tools${cwhite}.\n"
printf "8)  Langkah 8 pilih menu ${cblue}Install auto mining tools${cwhite}.\n"
printf "9)  Sampai disini proses instalasi server dan client selesai. Lanjut ke langkah konfigurasi sebelum start/stop mining.\n"
printf "10) Langkah 9 pada ${clgreen}Main Menu${cwhite} pilih ${cyellow}Input config${cwhite} isi semua data, lalu pilih back untuk menyimpan dan proses update ke semua STB.\n"
printf "11) Langkah 10 pilih menu ${cyellow}Start/stop mining${cwhite} untuk start atau stop auto mining semua STB.\n"
printf "12) Untuk melihat status realtime dari semua STB pilih menu ${cyellow}Cek mining status${cwhite}.\n"
printf "13) Semua status aktifitas tersimpan di direktori $HOME dan terkirim ke telegram bot.\n\n"
                printf "${cblue}**${cwhite} ${cyellow}b${cwhite})${cyellow} Back ${cwhite}\n"
                printf "${cblue}**${cwhite} ${cred}x${cwhite})${cred} Exit ${cwhite}\n"
                printf "${cblue}**********************************************${cwhite}\n"
                echo ""
                printf "${cblue}**${cwhite} Pilih menu (b atau x) lalu ${cyellow}ENTER${cwhite} : "
                read option
                echo ""
                case $option in
                        b ) clear; main_menu ;;
                        x ) clear; printf "${cred}Exiting STB Mining Tools V1.0...${cwhite}\n"; sleep 1; exit ;;
                        * ) clear; tput setf 2; printf "${credbg}Input salah.. Silahkan pilih b atau x${cwhite}"; tput setf 2;
                esac
        done
        }

clear
        function client_tools
        {
        option=0
        until [ "$option" = "5" ]; do
                printf "\n${cblue}**${cyellow} Author by: Wempy Surya ${cwhite}\n"
                printf "${cblue}**${cred} STB Mining Tools V1.0${cwhite}\n"
                echo ""
                printf "${cblue}** ${credbg}Registered "${maxclient}"${cwhite}\n"
                printf "${cblue}**********************************************${cwhite}\n"
                printf "${cblue}**${cwhite}	Mining Tools ${cwhite}\n"
                printf "${cblue}**********************************************${cwhite}\n"
                printf "${cblue}**${cwhite} 1)${cblue} Install ccminer ${cwhite}\n"
                printf "${cblue}**${cwhite} 2)${cblue} Install tools ${cwhite}\n"
                printf "${cblue}**${cwhite} 3)${cblue} Install auto mining tools${cwhite}\n"
                printf "${cblue}**${cwhite} ${cyellow}b${cwhite})${cyellow} Back ${cwhite}\n"
                printf "${cblue}**${cwhite} ${cred}x${cwhite})${cred} Exit ${cwhite}\n"
                printf "${cblue}**********************************************${cwhite}\n"
                echo ""
                printf "${cblue}**${cwhite} Pilih menu (1-5 b/x) lalu ${cyellow}ENTER${cwhite} : "
                read option
                echo ""
                case $option in
                        1 ) clear; [ -f $installccminer ] && $installccminer ;;
                        2 ) clear; [ -f $installtools ] && $installtools ;;
                        3 ) clear; [ -f $installautomining ] && $installautomining ;;
                        b ) clear; main_menu ;;
                        x ) clear; printf "${cred}Exiting STB Mining Tools V1.0...${cwhite}\n"; sleep 1; exit ;;
                        * ) clear; tput setf 5; printf "${credbg}Input salah.. Silahkan pilih 1, 2, 3, b atau x${cwhite}"; tput setf 5;
                esac
        done
        }

clear
	function server_tools
	{
	option=0
	until [ "$option" = "6" ]; do
                printf "\n${cblue}**${cyellow} Author by: Wempy Surya ${cwhite}\n"
                printf "${cblue}**${cred} STB Mining Tools V1.0${cwhite}\n"
        	echo ""
                printf "${cblue}** ${credbg}Registered "${maxclient}"${cwhite}\n"
		printf "${cblue}**********************************************${cwhite}\n"
		printf "${cblue}**${cwhite}	Server Tools ${cwhite}\n"
		printf "${cblue}**********************************************${cwhite}\n"
        	printf "${cblue}**${cwhite} 1)${cblue} Input IP ${cwhite}\n"
        	printf "${cblue}**${cwhite} 2)${cblue} SSH Copy ID ${cwhite}\n"
                printf "${cblue}**${cwhite} 3)${cblue} Install host ngrok ${cwhite}\n"
                printf "${cblue}**${cwhite} 4)${cblue} Input token & ID telegram ${cwhite}\n"
        	printf "${cblue}**${cwhite} ${cyellow}b${cwhite})${cyellow} Back ${cwhite}\n"
		printf "${cblue}**${cwhite} ${cred}x${cwhite})${cred} Exit ${cwhite}\n"
        	printf "${cblue}**********************************************${cwhite}\n"
        	echo ""
                printf "${cblue}**${cwhite} Pilih menu (1-4 b/x) lalu ${cyellow}ENTER${cwhite} : "
        	read option
        	echo ""
        	case $option in
        		1 ) clear; nano $srciptorem; [ -f $autogenworker ] && $autogenworker ;;
			2 ) clear; [ -f $installcopyid ] && $installcopyid ;;
			3 ) clear;
                                printf "\n${cyellow}Buat token ngrok dari https://dashboard.ngrok.com/auth${cwhite}\n\n";
                                printf "${cyellow}(Untuk batal kosongkan lalu enter)${cwhite}\n"
				printf "${cblue}Input ${cred}TOKEN NGROK ${cblue}lalu enter :${cwhite} "
                                read ngrok
				if [ -z "$ngrok" ]; then
					printf "${cwhite}Batal input token ngrok${cwhite}\n";
				else
					printf "${cyellow}Proses install host ngrok${cwhite}\n"
                                	mkdir -p $HOME/srv/;
                                	wget -P $HOME/srv/ https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-arm.zip;
                                	cd $HOME/srv/; unzip ngrok-stable-linux-arm.zip; 
					/srv/ngrok authtoken $ngrok;
                                	printf "\n${cyellow}Ngrok token "$ngrok" berhasil disimpan${cwhite}\n"
                                	echo "All done."
				fi ;;
                        4 ) clear;
                                printf "${cyellow}Buat bot dari telegram lalu kirim perintah ke @BotFather: ${cwhite}\n";
                                echo "/start /newbot > buat nama bot > buat nama user dgn akhiran _bot (contoh: nama_bot)";
                                printf "${cyellow}Simpan token${cwhite} dan coba kirim pesan teks untuk pertama kali ke bot yang baru dibuat\n";
                                printf "Cari chat_id dengan membuka url https://api.telegram.org/bot${cyellow}<token>${cwhite}/getUpdates di browser\n";
                                printf "${cyellow}Simpan chat id${cwhite} yang ada di ("from":{"id":${cyellow}<no_id>${cwhite})\n"
				echo ""
				printf "${cyellow}(Untuk batal kosongkan lalu enter)${cwhite}\n"
                                printf "${cblue}Input ${cred}TOKEN Telegram bot ${cblue}lalu enter :${cwhite} "
                                read bot_tele
                                printf "${cblue}Input ${cred}ID Telegram bot ${cblue}lalu enter :${cwhite} "
                                read no_id
					if [ -z "$bot_tele" ] && [ -z "$no_id" ]; then
                                        	printf "${cwhite}Batal input token & id telegram${cwhite}\n";
					else
                                		telebot=$(curl -o /dev/null -s -w "%{http_code}\n" "https://api.telegram.org/bot"$bot_tele"/sendMessage?chat_id="$no_id"&text=*STB Mining Tools V1.0*%0A%0ATelegram bot berhasil terpasang..")
                                		if [ $telebot != "200" ]; then
                                			printf "${cred}Telegram bot belum berhasil disimpan mohon cek token,  id & koneksi internet lalu coba lagi...${cwhite}\n"
						else
                                			printf "${cyellow}Telegram Bot berhasil disimpan. Cek pesan masuk dari STB Mining Tools V1.0${cwhite}\n"
		                                	printf "https://api.telegram.org/bot"$bot_tele"/sendMessage?chat_id="$no_id"&text=" > $teconfsrc
                                			echo "All done." 
						fi 
					fi ;;
			b ) clear; main_menu ;;
                        x ) clear; printf "${cred}Exiting STB Mining Tools V1.0...${cwhite}\n"; sleep 1; exit ;;
			* ) clear; tput setf 6; printf "${credbg}Input salah.. Silahkan pilih 1, 2, 3, 4, b atau x${cwhite}"; tput setf 6;
		esac
	done
	}

clear
	function main_menu
	{
	option=0
	until [ "$option" = "7" ]; do
		printf "\n${cblue}**${cyellow} Author by: Wempy Surya ${cwhite}\n"
        	printf "${cblue}**${cred} STB Mining Tools V1.0${cwhite}\n"
		echo ""
		printf "${cblue}** ${credbg}Registered "${maxclient}"${cwhite}\n"
        	printf "${cblue}**********************************************${cwhite}\n"
        	printf "${cblue}**${cwhite}	Main Menu ${cwhite}\n"
        	printf "${cblue}**********************************************${cwhite}\n"
                printf "${cblue}**${cwhite} 1)${cblue} Start/stop auto mining ${cwhite}\n"
		printf "${cblue}**${cwhite} 2)${cblue} Cek mining status ${cwhite}\n"
		printf "${cblue}**${cwhite} 3)${cblue} Input config ${cwhite}\n"
        	printf "${cblue}**${cwhite} 4)${cblue} Server tools ${cwhite}\n"
                printf "${cblue}**${cwhite} 5)${cblue} Client tools ${cwhite}\n"
                printf "${cblue}**${cwhite} ${cblue}h${cwhite})${cblue} Help${cwhite}\n"
		printf "${cblue}**${cwhite} ${cred}x${cwhite})${cred} Exit ${cwhite}\n"
		printf "${cblue}**********************************************${cwhite}\n"
		echo ""
		printf "${cblue}**${cwhite} Pilih menu (1-5 h/x) lalu ${cyellow}ENTER${cwhite} : "
		read option
		echo ""
		case $option in
			1 ) clear; printf "${cyellow}Lanjutkan start/stop auto mining (yes/no) ? ${cwhite}"
                                read answer
                                case $answer in
                                        yes ) [ -f $startstopmining ] && $startstopmining ;;
                                        no ) clear; main_menu ;;
                                        * ) clear; tput setf 2; printf "${credbg}Input salah.. Silahkan pilih yes atau no${cwhite}\n"; tput setf 2;
                                esac ;;
    			2 ) clear; printf "${cyellow}Lanjutkan cek mining status (yes/no) ? ${cwhite} "
				read answer
				case $answer in
					yes ) [ -f $cekclientstat ] && $cekclientstat ;;
					no ) clear; main_menu ;;
					* ) clear; tput setf 2; printf "${credbg}Input salah.. Silahkan pilih yes atau no${cwhite}\n"; tput setf 2;
				esac ;;
    			3 ) clear; input_config ;;
    			4 ) clear; server_tools ;;
                        5 ) clear; client_tools ;;
			h ) clear; help_menu ;;
			x ) clear; printf "${cred}Exiting STB Mining Tools V1.0...${cwhite}\n"; sleep 1; exit ;;
    			* ) clear; tput setf 7; printf "${credbg}Input salah.. Silahkan pilih 1, 2, 3, 4, 5, h atau x${cwhite}"; tput setf 7;
		esac
	done
	}
main_menu
else
clear
	function getid_menu
	{
	option=0
	until [ "$option" = "4" ]; do
                printf "\n${cblue}**${cyellow} Author by: Wempy Surya ${cwhite}\n"
                printf "${cblue}**${cred} STB Mining Tools V1.0${cwhite}\n"
		echo ""
		printf "${cblue}**********************************************${cwhite}\n"
		printf "${cblue}**${cred} ID belum terdaftar mohon registrasi dahulu${cwhite}\n"
		printf "${cblue}**********************************************${cwhite}\n"
		printf "${cblue}**${cwhite} 1)${cblue} Registrasi ID ${cwhite}\n"
                printf "${cblue}**${cwhite}${cred} x${cwhite})${cred} Exit ${cwhite}\n"
		printf "${cblue}**********************************************${cwhite}\n"
		echo ""
                printf "${cblue}**${cwhite} Pilih menu (1/x) lalu ${cyellow}ENTER${cwhite} : "
		read option
		echo ""
		case $option in
			1 ) clear;
			printf "${cyellow}Apakah anda bersedia transfer donasi Rp. 20.000.-/STB Server dan Rp. 5.000.-/STB Client untuk registrasi ke Author (${cgreen}yes/${cred}no) ${cwhite}?\n"
			read donasi
			if [ "$donasi" = yes ]; then
                                [ -d $usrlocalresdir ] || mkdir $usrlocalresdir
				printf "\nMohon isi data dengan benar dan pastikan no. whatsapp aktif\n" 
				printf "\n${cblue}Nama pengguna : ${cwhite}"
                                read nama
                                printf "${cblue}No Whatsapp : ${cwhite}"
                                read noWA
                                printf "${cblue}Jumlah STB yang akan di registrasi : ${cwhite}"
                                read qtystb
                                echo ""$nama""$noWA""$qtystb"" > $usrlocalresdir/ureg
                                sleep 2
                                byuser2="$(echo "$nama""$noWA""$qtystb" | sha256sum | awk '{print $1}')"
                                #printf "${cblue}Your ID : ${cwhite}\n"${byuser2}"\n"${byblkmmc}"\n"${bymac}"\n"
				botreg="$(curl -o /dev/null -s -w "%{http_code}\n" "https://api.telegram.org/bot5224867717:AAG3k6BV1l5-jp2VYVxgObHj5G5q9uIcxtE/sendMessage?chat_id=1079887073&text=Nama:%0A$nama%0ANo. Whatsapp:%0A$noWA%0AJumlah STB:%0A$qtystb%0A%0AUser-BLK-Mac-ID:%0A${byuser2}%0A${byblkmmc}%0A${bymac}")"
                                if [ ${botreg} != "200" ]; then
                                        printf "\n${cred}Data belum berhasil terkirim ke Author mohon cek koneksi internet anda & coba lagi...${cwhite}\n"
                                else
                                printf "\n${cyellow}Data dan ID STB berhasil terkirim kepada Author & mohon menunggu respon whatsapp dari Author. Terima kasih...${cwhite}\n"
                                fi
                                sleep 3; exit;
			else
				if [ "$donasi" = no ]; then
				clear; printf "${cred}Exiting STB Mining Tools V1.0...${cwhite}\n"; sleep 1; exit ;
				else
				printf "${credbg}Input salah.. Pilih yes atau no lalu ${cyellow}ENTER ${cwhite}";
				fi
			fi ;;
                        x ) clear; printf "${cred}Exiting STB Mining Tools V1.0...${cwhite}\n"; sleep 1; exit ;;
			* ) clear; tput setf 2; printf "${credbg}Input salah.. Silahkan pilih 1 atau 2${cwhite}"; tput setf 2;
		esac
	done
	}
getid_menu
fi
